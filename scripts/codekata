#!/usr/bin/env sh

readonly ACTION=$1
readonly ACTION_ARG=$2

if [ "" == "$(readlink $0)" ]; then
    readonly KATA_INCLUDE=$(dirname $0)
else
    readonly KATA_INCLUDE=$(dirname $(readlink $0))
fi

source $KATA_INCLUDE/utils


function banner() {
    echo "\033[0;33mCode Kata.\033[0m Programming for education and fun"
}

function setup_environment() {
    set -e

    if [ ! -n "$KATA_HOME" ]; then
	readonly KATA_HOME=~/.codekata
    fi
}

function cat_file() {
    local file_path=$1

    is_file $file_path \
	&& { cat $file_path; }
}

function run_script() {
    local script_path=$1
    local script_param=$2

    is_file $script_path && { \
	sh $script_path $script_param;  }
}

function prompt_with_default() {
    local pmt=$1
    local default=$2

    read -p "$pmt" response
    
    if [ "$response" == "" ]; then
	return 0
    else
	if [ "$response" == "Y" ]; then
	    return 0
	else
	    return 1
	fi
    fi
}

function make_lazybuilder_available() {
    echo "Checking lazybuilder installaiton"
    is_installed "lazybuilder" && { \
	brew update; \
	brew tap grahambrooks/lazybuilder; \
	brew install lazybuilder; }
    echo "Lazybuilder should be available"
}

function start_action() {
    local kata_path=$1
    local kata_lang=$2
    local kata_dir=$(pwd)/$(date +"%Y-%m-%d")
    
    local language_path="$kata_path/templates/$kata_lang"

    if [ -d $language_path ]; then
	
	cat_file $language_path/about

	run_script "$kata_path/recipes/${kata_lang}.sh"

	if prompt_with_default "Start a new kata in $kata_dir Y/n? " "Y"; then
	    echo Setting up for kata $kata_dir

	    if [ -d $kata_path/templates/$kata_lang.sh ] then
		run_script "$kata_path/templates/$kata_lang.sh" "$kata_dir"
	    else
		mkdir $kata_dir
		cp $kata_path/templates/$kata_lang/* $kata_dir
	    fi


	    echo "
Your \033[32;1m$kata_lang\033[0m Kata has been setup in

\033[32;1m$kata_dir\033[0m

To keep things simple everything you need is in kata.$kata_lang just
open your favorite editor, open the file and start editing.

To keep things honest lazybuilder is running and will run tests each
time you save the kata source file.

Enjoy!!

"

	    cd $kata_dir
	    
	    make_lazybuilder_available;

	    lazybuilder -t;
	else
	    echo "OK nothing done. \033[0;33mMaybe next time\033[0m"
	fi
    else
	echo $kata_lang is not currently supported
	list_action
	exit 1
    fi
    
}

function list_action() {
    echo "
\033[1mAvailable langugage templates:\033[0m

\033[32mjs    \033[0mJavaScript Kata using qunit and node.js

"
}

function update_action() {
    local repo_path=$1

    if [ -d $repo_path ]; then
	if git --work-tree=$repo_path --git-dir=$repo_path/.git pull origin master; then
	    echo "\033[0;34mCode Kata up to date\033[0m"
	else 
	    echo "\033[0;34mSomething went wrong with the update - you will need to fix the problem yourself\033[0m"
	fi
    else
	echo "\033[0;33mCan't find installed $repo_path directory. You will need to reinstall"
    fi
}

function kata_action() {
    local kata_path=$1
    local action=$2
    local action_arg=$3

    echo "\033[32m
Available Katas\033[0m
"

    ls -1 $kata_path/catalogue | sed 's/.man//'

    echo
}

function info_action() {
    local kata_path=$1
    local kata_name=$2

    groff -man -Tascii $kata_path/catalogue/$kata_name.man
}


function usage() {
    echo "
\033[1mUsage\033[0m

    \033[31;1mcodekata\033[32;1m [action]\033[0m

\033[1mAvailable actions:\033[0m

\033[32mstart <language> \033[0mStart a kata in your chosen language
\033[32mlist             \033[0mList available languages
\033[32mupdate           \033[0mUpdate the currently installed codekata
\033[32mkata             \033[0mList available katas
\033[32minfo <kata>      \033[0mShow details of the named kata
"
}

function do_action() {
    local kata_path=$1
    local action=$2
    local action_arg=$3
    local action_name=${action}_action

    if [ ! -z "$action" ]; then
	if declare -F $action_name &>/dev/null; then 
	    $action_name $kata_path $action_arg
	else
	    if [ -e "$kata_path/scripts/$action" ]; then
		"$kata_path/scripts/$action"
	    else
		if [ -e $kata_path/recipes/$action.sh ]; then
		    sh $kata_path/recipes/$action.sh
		else
		    echo "Unknown or missing action"
		fi
	    fi
	fi
    else
	usage
    fi
}


function codekata() {
    banner
    setup_environment
    do_action $KATA_HOME $ACTION $ACTION_ARG
}

codekata
